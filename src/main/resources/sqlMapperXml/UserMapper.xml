<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hengaiw.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.hengaiw.model.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="loginname" property="loginname" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="organization_id" property="organizationId" jdbcType="INTEGER"/>
        <result column="cardNo" property="cardNo" jdbcType="VARCHAR"/>
        <result column="usertype" property="usertype" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="createdate" property="createdate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="userVoResultMap" type="com.hengaiw.commons.result.UserVo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="loginname" property="loginname" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="organization_id" property="organizationId" jdbcType="INTEGER"/>
        <result column="organizationName" property="organizationName" jdbcType="VARCHAR"/>
        <result column="cardNo" property="cardNo" jdbcType="VARCHAR"/>
       <result column="usertype" property="usertype" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="createdate" property="createdate" jdbcType="TIMESTAMP"/>
        <collection property="rolesList" ofType="Role">
            <id column="roleId" property="id"/>
            <result column="roleName" property="name"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    id, loginname, name, password,phone,cardNo, status,usertype, organization_id, createdate
  	</sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>

	<select id="selectAll" resultMap="userVoResultMap">
       SELECT DISTINCT
        t.id,
        loginname,
        t.`name`,
        `password`,
        cardNo,
       	usertype,
        t.`status`,
        organization_id,
        t.createdate,
        phone,
        s.`name` AS organizationName
        FROM
        user t
        LEFT JOIN organization s ON s.id = t.organization_id
    </select>
    <select id="findUserByLoginName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where loginname = #{username}
    </select>

    <select id="findUserVoById" resultMap="userVoResultMap" parameterType="java.lang.Long">
        SELECT
        t.id,
        loginname,
        t.`name`,
        `password`,
       	cardNo,
       	usertype,
        t.`status`,
        organization_id,
        t.createdate,
        phone,
        s.`name` AS organizationName,
        o.id AS roleId,
        o.`name` AS roleName
        FROM
        user t
        LEFT JOIN (select `user_id`,max(role_id) as role_id from user_role group by user_id) r ON t.id = r.user_id
        LEFT JOIN role o ON r.role_id = o.id
        LEFT JOIN organization s ON s.id = t.organization_id
        <where>
            t.id = #{id}
        </where>
    </select>

    <select id="findUserById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id}
    </select>

    <select id="findUserPageCondition" resultMap="userVoResultMap" parameterType="PageInfo">
        SELECT DISTINCT
        t.id,
        loginname,
        t.`name`,
        `password`,
        cardNo,
       usertype,
        t.`status`,
        organization_id,
        t.createdate,
        phone,
        s.`name` AS organizationName
       
        FROM
        user t
        
        LEFT JOIN organization s ON s.id = t.organization_id
        <where>
            <if test=" condition.name != null and condition.name != '' ">
                t.name = #{condition.name}
            </if>
            <if test=" condition.organizationId != null ">
                t.organization_id = #{condition.organizationId}
            </if>
            <if test="condition.startTime != null">
                <![CDATA[
            and t.createdate >= #{condition.startTime}
           ]]>
            </if>
            <if test="condition.endTime != null">
                <![CDATA[
            and t.createdate <= #{condition.endTime}
        ]]>
            </if>
        </where>
        <if test="sort != null">
        ORDER BY ${sort} ${order}
        </if>
        LIMIT #{from}, #{size}
    </select>

    <select id="findUserPageCount" resultType="java.lang.Integer" parameterType="PageInfo">
        select count(*) count
        from user t
        <where>
            <if test=" condition.name != null and condition.name != '' ">
                t.name = #{condition.name}
            </if>
            <if test=" condition.organizationId != null ">
                t.organization_id = #{condition.organizationId}
            </if>
            <if test="condition.startTime != null">
                <![CDATA[
            and t.createdate >= #{condition.startTime}
           ]]>
            </if>
            <if test="condition.endTime != null">
                <![CDATA[
            and t.createdate <= #{condition.endTime}
            ]]>
            </if>
        </where>
    </select>

    <delete id="deleteById" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.hengaiw.model.User">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user (loginname, name, password,
        cardNo,
        usertype,
        status, organization_id, createdate,
        phone)
        values (#{loginname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{cardNo,jdbcType=VARCHAR},#{usertype,jdbcType=TINYINT},
        #{status,jdbcType=TINYINT}, #{organizationId,jdbcType=INTEGER}, now(),
        #{phone,jdbcType=VARCHAR})
    </insert>

    <update id="updateUserPwdById">
    update user
    set password = #{pwd,jdbcType=VARCHAR},
    createdate = now()
    where id = #{userId,jdbcType=BIGINT}
  </update>

    <update id="updateUser" parameterType="com.hengaiw.model.User">
        update user
        <set>
            <if test="loginname != null">
                loginname = #{loginname,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="cardNo != null">
                cardNo = #{cardNo,jdbcType=VARCHAR},
            </if>
            <if test="usertype != null">
                usertype = #{usertype,jdbcType=TINYINT},
            </if>
            
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="organizationId != null">
                organization_id = #{organizationId,jdbcType=INTEGER},
            </if>
            <if test="createdate != null">
                createdate = #{createdate,jdbcType=TIMESTAMP},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    
     <select id="findUserByOrganizationId"  resultMap="userVoResultMap"   parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List"/>
        from user
        where organization_id = #{id}
    </select>
  
    
    
</mapper>